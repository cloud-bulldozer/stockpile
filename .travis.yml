---
language: python

sudo: required

services:
  - docker

env:
  - distribution: centos
    version: 7

before_install:
  - 'sudo docker pull ${distribution}:${version}'
  - 'sudo docker build --no-cache --rm --file=ci/Dockerfile.${distribution}-${version} --tag=${distribution}-${version}:ansible ci'

jobs:
  include:
    - stage: "Ansible Syntax Check"
      name: "Check Ansible Syntax"
      script:
        - container_id=$(mktemp)
        - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="${PWD}":/opt/stockpile:ro ${distribution}-${version}:ansible > "${container_id}"'
        - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -v -i /opt/stockpile/ci/hosts /opt/stockpile/stockpile.yml --syntax-check'
    - stage: "Run Playbook"
      name: "Check JSON"
      script:
        - container_id=$(mktemp)
        - 'sudo docker run --detach --privileged -v /sys/fs/cgroup:/sys/fs/cgroup:ro --volume="/tmp:/tmp:rw" --volume="${PWD}":/opt/stockpile:rw ${distribution}-${version}:ansible > "${container_id}"'
        - 'sudo docker exec "$(cat ${container_id})" env ANSIBLE_FORCE_COLOR=1 ansible-playbook -vvv -i /opt/stockpile/ci/hosts /opt/stockpile/stockpile.yml --connection local --sudo --extra-vars "@/opt/stockpile/ci/ci-group_vars.yml"'
        - 'ls -tlarh /tmp'
        - 'python -m json.tool < /tmp/stockpile.json'
