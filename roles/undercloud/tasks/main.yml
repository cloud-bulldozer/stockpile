---

- name: Check that undercloud is installed
  become: true
  stat: path=/etc/undercloud/undercloud.conf
  register: undercloud_config

- name: Parse config
  become: true
  script: ../common/files/openstack-config-parser.py undercloud
  when: undercloud_config.stat.exists
  register: undercloud_data

# These won't be needed because stockpile wil run mysql and rabbitmq role against UC as well.
# - name: Get max_connections on the database
#   shell: mysql -e "show variables like 'max_connections';" | grep max_connections | awk '{print $2}'
#   register: max_conn
#   ignore_errors: true
#   when: undercloud_conf.stat.exists
#
# - name: Set max database connections
#   set_fact:
#     openstack_mysql_max_connections: "{{ max_conn.stdout }}"
#   when: undercloud_conf.stat.exists
#
# - name : Get file descriptors for the mysql process
#   shell: cat /proc/$(pgrep mysqld_safe)/limits | grep "open files" | awk '{print $4}'
#   register: mysql_desc
#   when: undercloud_conf.stat.exists
#
# - name: Set file descriptors fact for mysql
#   set_fact:
#     openstack_mysql_file_descriptors: "{{ mysql_desc.stdout }}"
#   when: undercloud_conf.stat.exists
#
# - name : Get rabbitmq file descriptors
#   shell: rabbitmqctl status | grep total_limit |  awk -F',' '{print $2}' | sed 's/.$//'
#   register: rabbitmq_desc
#   ignore_errors: true
#   when: undercloud_conf.stat.exists

- name: Get Controller Nodes number
  shell: source {{ ansible_env.HOME }}/stackrc; undercloud list | grep controller | grep ACTIVE | wc -l
  register: controller_count
  when: undercloud_conf.stat.exists

- name: Get Compute Nodes number
  shell: source {{ ansible_env.HOME }}/stackrc; nova list | grep compute | grep ACTIVE | wc -l
  register: compute_count
  when: undercloud_conf.stat.exists

- name: setting fact
  set_fact:
    stockpile_openstack_undercloud:
      - "{{ undercloud_data.stdout }}"
    stockpile_openstack_enviroment:
      - controllers_number: "{{ controller_count.stdout }}"
      - computes_number: "{{ compute_count.stdout }}"
  when: undercloud_data.stdout is defined and undercloud_conf.stat.exists
